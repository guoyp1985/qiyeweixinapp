<style lang="less">
.mygroups-page{
  padding-bottom:100rpx;
  .scroll_item{
    width: 100%;background-color: #fff;position:relative;
    padding: 30rpx 20rpx;box-sizing: border-box;
    display: flex;justify-content: center;align-items: center;
  }
  .scroll_item .pic{width:100rpx;height:100rpx;border-radius:15rpx;}
  .scroll_item .data_btn{
      height: 44rpx;
      border-radius: 20rpx;
      color: #ffffff;
      font-size: 24rpx;
      text-align: center;
      line-height: 44rpx;
      padding:0 20rpx;
  }
  .groupInfo {
    display: flex;
    .avatar{
      width: 160rpx;
      .avatar-outer{
        width:135rpx;height:135rpx;background-color:#dbdfe2;border-radius:10rpx;box-sizing: border-box;
        .avatar-list{
          width:100%;display: flex;flex-wrap: wrap;
        }
        .avatar-item{
          width:45rpx;height:45rpx;box-sizing: border-box;display:flex;justify-content: center; align-items: center;
          .inner{
            width:40rpx;height:40rpx;
            image{width:100%;height:100%;display:block;}
          }
        }
      }
    }
    .avatar.small{
      .avatar-item{
        width:67rpx !important;height:67rpx !important;box-sizing:border-box;
        .inner{width:60rpx;height:60rpx;}
      }
    }
    .avatar.one{
      .avatar-item{
        width:135rpx !important;height:135rpx !important;box-sizing:border-box;
        .inner{width:130rpx;height:130rpx;}
      }
    }
    .members{
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
  }
}
.mygroups-page.iphone{padding-bottom:168rpx;}
.add-bottom-area{
  width:100%;height:100rpx;position:fixed;left:0;right:0;bottom:0;
  .btn-bottom{font-size: 32rpx;width:100%;height:100%;}
}
.add-bottom-area.iphone{padding-bottom:68rpx;}
</style>
<template>
  <view :class="{'iphone' : isIpx}" class="mygroups-page">
    <block wx:if="{{disList2}}">
      <view wx:if="{{!tabData2.length}}" class="w_100 flex_empty">暂无数据</view>
      <view wx:else class="scroll_list">
        <repeat for="{{tabData2}}" item="item" index="index">
          <view class="data_item scroll_item">
            <view class="groupInfo" data-id="{{item.id}}">
              <view class="avatar" data-data="{{item}}" bindtap="toMembers" :class="{small: (item.avatar.length < 2 && item.avatar.length > 0), one: !item.avatar.length}">
                <view class="avatar-outer flex_center">
                  <view class="avatar-list">
                    <repeat for="{{item.avatar}}" item="avatar" index="index1">
                      <view class="avatar-item">
                        <view class="inner">
                          <image mode="aspectFill" src="{{avatar}}" lazy-load/>
                        </view>
                      </view>
                    </repeat>
                  </view>
                </view>
              </view>
            </view>
            <view class="flex_cell">
              <view class="members" data-data="{{item}}" bindtap="toMembers">
                <view class="clamp1 font16">{{item.title}}</view>
                <view class="clamp1 mt5 color-gray">群成员: {{item.members}}人</view>
              </view>
            </view>
            <view class="data_btn" style="{{themeObject.bgStyle}}" data-data="{{item}}" bindtap="toMembers">群成员</view>
          </view>
        </repeat>
        <view class="load-end-area loading" wx:if="{{load2}}"></view>
        <view class="load-end-area done" wx:elif="{{done2}}"></view>
      </view>
    </block>
  </view>
  <view :class="{'iphone' : isIpx}" class="add-bottom-area" @tap="toAddgroup">
    <view class="w_100 h_100 flex_center">
      <button class="btn-bottom flex_center bg-theme color-white" style="{{themeObject.bgStyle}}">添加微信群</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import Config from '@/config'
import Util from '@/libs/util'
export default class MyGroups extends wepy.page {
  config = {
    enablePullDownRefresh: true,
    backgroundTextStyle: 'dark'
  }
  data = {
    disList2: false,
    tabData2: [],
    load2: false,
    done2: false,
    themeObject: {}
  }
  refreshPage () {
    this.disList2 = false
    this.tabData2 = []
    this.pageStart2 = 0
    this.getData2()
  }
  onPullDownRefresh () {
    this.refreshPage()
    wepy.showNavigationBarLoading()
    setTimeout(function () {
      wepy.hideNavigationBarLoading()
      wepy.stopPullDownRefresh()
    }, 500)
  }
  onReachBottom () {
    if (this.tabData2.length === (this.pageStart2 + 1) * this.limit) {
      this.pageStart2++
      this.load2 = true
      this.getData2()
    }
  }
  getData2 = function () {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/groups/myGroups`,
      data: {pagestart: this.pageStart2, limit: this.limit},
      method: 'post'
    }).then(res => {
      this.load2 = false
      const data = res.data
      let retdata = data.data ? data.data : data
      this.tabData2 = this.tabData2.concat(retdata)
      // this.tabData2.forEach(function (item) { this.getMembers(item, 'primary') })
      this.disList2 = true
      if (retdata.length < this.limit && this.tabData2.length) {
        this.done2 = true
      } else {
        this.done2 = false
      }
      this.$apply()
    })
  }
  getMembers (item, type) {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/wxa/list?module=meetingmembers`,
      method: 'post',
      data: {id: item.id, wid: this.userInfo.uid, pagestart: 0, limit: 8, type: type}
    }).then(res => {
      const data = res.data.data
      item.membersAvatar = []
      data.forEach(function (dataItem) {
        item.membersAvatar.push(dataItem.avatar)
      })
      this.$apply()
    })
  }
  onLoad (options) {
    this.options = options
    this.limit = Config.Limit
    this.pageStart2 = 0
    wepy.hideShareMenu()
  }
  handlePageData () {
    this.globalData = this.$parent.globalData
    Util.appInit(this.globalData, this)
    this.userInfo = this.globalData.userInfo
    if (!this.tabData2.length) {
      this.getData2()
    }
    this.$apply()
  }
  onShow () {
    if (this.$parent.globalData.flag.bokaAuth) {
      this.handlePageData()
    } else {
      this.$parent.loadCallback = () => {
        this.handlePageData()
      }
    }
  }
  methods = {
    toAddgroup (e) {
      wepy.navigateTo({url: '/packageB/pages/roomApply'})
    },
    toMembers (e) {
    //   const dataset = e.currentTarget.dataset
    //   const data = dataset.data
    //   wepy.navigateTo({url: `/packageB/pages/groupMembers?id=${data.id}`})
    }
  }
}
</script>
