<style lang="less">
.qyshop-page.iphone{padding-bottom:180rpx;}
.qyshop-page.havebottom{
  .right-area{padding-bottom:240rpx;}
}
.qyshop-page{
  width:100%;height:100%;position:relative;box-sizing: border-box;padding-bottom:110rpx;
  .top-address{
    width:100%;padding:20rpx;box-sizing:border-box;
  }
  .switch-area{
    width:300rpx;height:70rpx;padding:4rpx;box-sizing:border-box;
    border-style:solid;border-width:4rpx;border-radius:60rpx;display:flex;
    .item{
      flex:1;height:100%;border-radius:60rpx;
      display:flex;justify-content:center;align-items:center;
    }
  }
  .banner-outer{
    background-color:#fff;
    .news-swiper-outer{top:20rpx;}
  }
  .list-container{}
  .list-container.normal{display:flex;padding-top:20rpx;}
  .list-container.fixed{}
  .left-area.fixed{top:0;position:fixed;left:0;;bottom:0;}
  .left-area.havebanner{
    /*top:240rpx;*/
  }
  .left-area.fixed.havebanner{top:0;position:fixed;left:0;bottom:0;}
  .left-area{
    /*position:fixed;left:0;top:130rpx;bottom:0;*/
    overflow-y:auto;
    width:200rpx;
    .class-list{
      width:100%;
      .item{
        position:relative;width:100%;padding:20rpx 0;background-color:#f2f2f2;
        .txt{
          text-align:center;font-size:30rpx;word-wrap:break-word;
        }
      }
      .item .line{display:none;}
      .item.active{
        background-color:#fff;font-weight:bold;
        .line{
          display:block;position:absolute;left:0;top:0;bottom:0;
          width:10rpx;border-top-left-radius:5rpx;border-bottom-left-radius:5rpx;
        }
      }
    }
  }
  .right-area.fixed{padding-left:220rpx;}
  .right-area{
    padding-left:20rpx;flex:1;background-color:#fff;
    padding-right:20rpx;box-sizing: border-box;padding-bottom:126rpx;
    .c-txt{line-height:50rpx;font-weight:bold;padding-top:20rpx;font-size:30rpx;}
  }
  .product-list{
    .item:not(:first-child){margin-top:20rpx;}
    .item{
      /*
      position:relative;padding-bottom:55%;
      .pic{
        position:absolute;left:0;top:0;right:0;bottom:0;
        box-shadow: 0 2rpx 6rpx rgba(0, 0, 0, 0.5);border-radius:10rpx;
        image{width:100%;height:100%;border-radius:10rpx;}
      }
      .txt{
        position:absolute;left:0;right:0;bottom:0;
        padding:0 20rpx;box-sizing: border-box;
        overflow: hidden;display: block;white-space: nowrap;text-overflow: ellipsis;
        background-color:rgba(0,0,0,0.5);color:#fff;
        text-align:left;line-height:60rpx;
      }
      .ico-txt{
        position:absolute;left:0;top:0;right:0;bottom:0;z-index:2;
        background-color:rgba(255,255,255,0.5);color:#fff;
        display:flex;justify-content:center;align-items: center;
        .ico{
          width:100rpx;height:100rpx;border-radius:50%;
          background-color:rgba(0,0,0,0.5);color:#fff;
          display:flex;justify-content:center;align-items: center;
        }
      }
      */
      display:flex;
      .pic{
        width:175rpx;margin-right:20rpx;position:relative;
        image{width:175rpx;height:175rpx;border-radius:10rpx;border:#ccc 2rpx solid;box-sizing: border-box;}
        .ico-txt{
          position:absolute;left:0;top:0;right:0;bottom:0;z-index:2;
          background-color:rgba(255,255,255,0.5);color:#fff;
          display:flex;justify-content:center;align-items: center;
          .ico{
            width:100rpx;height:100rpx;border-radius:50%;
            background-color:rgba(0,0,0,0.5);color:#fff;
            display:flex;justify-content:center;align-items: center;
          }
        }
      }
      .txt-cell{
        flex:1;padding-right:10rpx;
        .row1{width:100%;height:80rpx;font-size:30rpx;font-weight:bold;line-height:1.3;}
        .row2{
          width:100%;height:40rpx;display:flex;
          .txt-btn{
            display:flex;justify-content: flex-start;align-items: center;
            .l-btn{
              background-color:#000;color:#fff;padding:4rpx 12rpx 4rpx 6rpx;
              border-top-left-radius:10rpx;border-bottom-left-radius:10rpx;
            }
            .r-btn{border-top-right-radius:10rpx;border-bottom-right-radius:10rpx;padding:4rpx 10rpx 4rpx 6rpx;}
          }
        }
        .row3:after{
          content:'';display:block;clear:both;width:0;overflow:hidden;
        }
        .row3{
          width:100%;height:40rpx;margin-top:10rpx;padding-bottom:5rpx;box-sizing: border-box;
          .l-cell{float:left;font-weight:bold;}
          .r-cell{
            float:right;display:flex;justify-content: flex-end;align-items: center;
            .ico{width:40rpx;height:40rpx;border-radius:50%;text-align:center;line-height:35rpx;}
            .border-ico{border-style:solid;border-width:2rpx;}
            .txt{width:60rpx;height:40rpx;display:flex;justify-content:center;align-items:center;}
          }
        }
      }
    }
  }
}
.fix-bottom{
  position:fixed;left:0;bottom:116rpx;right:0;background-color:#fff;z-index:10;
  height:130rpx;display:flex;justify-content: center;align-items: center;
  .ico-cell{
    width:100rpx;height:100%;display:flex;justify-content: center;align-items: center;
    .ico{
      width:80rpx;height:80rpx;border-radius:50%;position:relative;
      display:flex;justify-content: center;align-items: center;
      .al{font-size:38rpx;}
      .num-area{
        position:absolute;right:-10rpx;top:-10rpx;
        width:40rpx;height:40rpx;border-radius:50%;
        display:flex;justify-content: center;align-items: center;
      }
      .num-area.num2{font-size:24rpx;}
    }
  }
  .btn{
    margin-right:20rpx;width:200rpx;height:70rpx;border-radius:60rpx;font-size:36rpx;
    display:flex;justify-content: center;align-items: center;
  }
  .inner{
    width:90%;height:100rpx;border-radius:100rpx;
    display:flex;justify-content: center;align-items: center;box-shadow: 0px 0px 3px 1px #e6ebed;
  }
}
.fix-bottom.gray-bottom{
  .inner{background-color:#434345;color:#fff;border-color:#434345;}
}
.product-cart-area{
  position:fixed;left:0;top:0;right:0;bottom:246rpx;background-color:rgba(0,0,0,0.5);
  transition: opacity 300ms ease 100ms;overflow:hidden;z-index:10;
  .product-box{
    width:100%;max-height:77%;
    position:relative;
    background-color:#fff;
    border-top-left-radius:30rpx;
    border-top-right-radius:30rpx;
    padding:40rpx 30rpx 0;
    box-sizing: border-box;
    transition: bottom 300ms ease 100ms;
    overflow-y:auto;
    -webkit-overflow-scrolling:touch;
  }
  .product-box.slide-out {bottom: 0;}
  .product-box.slide-in {bottom: -100%;}
  .part1 .al{font-size:34rpx;}
  .list-area{
    .item:not(:first-child){margin-top:20rpx;}
    .item{
      display:flex;width:100%;
      .pic{
        width:175rpx;margin-right:20rpx;position:relative;
        image{width:175rpx;height:175rpx;border-radius:10rpx;border:#ccc 2rpx solid;box-sizing: border-box;}
        .ico-txt{
          position:absolute;left:0;top:0;right:0;bottom:0;z-index:2;
          background-color:rgba(255,255,255,0.5);color:#fff;
          display:flex;justify-content:center;align-items: center;
          .ico{
            width:100rpx;height:100rpx;border-radius:50%;
            background-color:rgba(0,0,0,0.5);color:#fff;
            display:flex;justify-content:center;align-items: center;
          }
        }
      }
      .txt-cell{
        flex:1;padding-right:10rpx;
        .row1{width:100%;height:80rpx;font-size:30rpx;font-weight:bold;line-height:1.3;}
        .row2{
          width:100%;height:40rpx;display:flex;
          .txt-btn{
            display:flex;justify-content: flex-start;align-items: center;
            .l-btn{
              background-color:#000;color:#fff;padding:4rpx 12rpx 4rpx 6rpx;
              border-top-left-radius:10rpx;border-bottom-left-radius:10rpx;
            }
            .r-btn{border-top-right-radius:10rpx;border-bottom-right-radius:10rpx;padding:4rpx 10rpx 4rpx 6rpx;}
          }
        }
        .row3:after{
          content:'';display:block;clear:both;width:0;overflow:hidden;
        }
        .row3{
          width:100%;height:40rpx;margin-top:10rpx;padding-bottom:5rpx;box-sizing: border-box;
          .l-cell{float:left;font-weight:bold;}
          .r-cell{
            float:right;display:flex;justify-content: flex-end;align-items: center;
            .ico{width:40rpx;height:40rpx;border-radius:50%;text-align:center;line-height:35rpx;}
            .border-ico{border-style:solid;border-width:2rpx;}
            .txt{width:60rpx;height:40rpx;display:flex;justify-content:center;align-items:center;}
          }
        }
      }
    }
  }
}

.product-cart-area.fade-out{z-index: 1000;top:0;overflow:hidden;}
.product-cart-area.fade-in{top:100%;overflow:hidden;}
.mdpop-list{
  .scroll_item{display:block;padding:20rpx;box-sizing: border-box;}
  .scroll_item:not(:last-child){border-bottom:#eee 2rpx solid;}
}
</style>
<template>
  <view :class="{'iphone' : isIpx, havebottom: isClose || totalPrice > 0}" id="page-container" class="qyshop-page">
    <view wx:if="{{selectedMd && selectedMd.id}}" class="top-address flex_left">
      <view class="flex_left flex_cell">
        <view class="flex_cell flex_left" @tap="chooseMd">
          <view>
            <view class="font16 bold">{{selectedMd.title}}</view>
            <view class="color-gray">距您{{selectedMd.distance}}</view>
          </view>
        </view>
        <view class="flex_right pl10">
          <view class="switch-area" style="{{themeObject.borderStyle}}">
            <view @tap="switchType(1)" class="item" style="{{dcType == 1 ? themeObject.bgStyle : ''}}">外卖</view>
            <view @tap="switchType(2)" class="item" style="{{dcType == 2 ? themeObject.bgStyle : ''}}">自取</view>
            <view @tap="switchType(3)" class="item" style="{{dcType == 3 ? themeObject.bgStyle : ''}}">堂食</view>
          </view>
        </view>
      </view>
    </view>
    <block wx:if="{{disBanner}}">
      <block wx:if="{{bannerData.length}}">
        <view class="banner-outer">
          <view class="news-swiper-outer" wx:if="{{bannerData.length > 1}}">
            <swiper
              class="news-swiper"
              autoplay
              indicator-dots="{{bannerData.length > 1}}"
              indicator-color="#d0cdd1"
              indicator-active-color="#ff9900"
              interval="6000"
              circular>
              <repeat for="{{bannerData}}" index="index" item="item">
                <swiper-item>
                  <image mode="aspectFill" src="{{item.photo}}" data-data="{{item}}" bindtap="clickBanner"></image>
                </swiper-item>
              </repeat>
            </swiper>
          </view>
          <view class="banner-pic" wx:else data-data="{{bannerData[0]}}" bindtap="clickBanner">
            <image mode="aspectFill" src="{{bannerData[0].photo}}"></image>
          </view>
        </view>
      </block>
      <view class="list-container {{isScroll ? 'fixed' : 'normal'}}">
        <view class="left-area {{isScroll ? 'fixed' : ''}} {{bannerData.length ? 'havebanner' : ''}}">
          <view wx:if="disClass" class="class-list">
            <repeat for="{{classData}}" item="item" index="index">
              <view id="class-{{item.id}}" class="item {{item.clicked ? 'active' : ''}}" bindtap="clickClass({{item}}, {{index}})">
                <view class="line" style="{{item.clicked ? themeObject.bgStyle : ''}}"></view>
                <view class="txt" style="{{item.clicked ? themeObject.colorStyle : ''}}">{{item.title}}</view>
              </view>
            </repeat>
          </view>
        </view>
        <view id="right-container" class="right-area {{isScroll ? 'fixed' : 'normal'}}">
          <block wx:if="disList">
            <repeat for="{{classData}}" item="citem" index="cindex">
              <view id="product-{{citem.id}}" class="class-container">
                <view class="c-txt">{{citem.title}}</view>
                <view class="product-list">
                  <!-- <repeat for="{{listObject[citem.id]}}" item="item" index="index"> -->
                  <repeat for="{{productList}}" item="item" index="index">
                    <!-- <view class="item" bindtap="toProduct({{item}},{{index}})">
                      <view class="ico-txt" wx:if="{{item.storage <= 0}}">
                        <view class="ico">已售罄</view>
                      </view>
                      <view class="pic">
                        <image mode="aspectFill" src="{{item.photo}}"></image>
                      </view>
                      <view class="txt">{{item.title}}</view>
                    </view> -->
                    <view class="item" wx:if="{{item.classid == citem.id}}">
                      <view class="pic" @tap="toProduct({{item}},{{index}})">
                        <view class="ico-txt" wx:if="{{item.storage <= 0}}">
                          <view class="ico">已售罄</view>
                        </view>
                        <image mode="aspectFill" src="{{item.photo}}"></image>
                      </view>
                      <view class="txt-cell">
                        <view class="row1" @tap="toProduct({{item}},{{index}})">{{item.title}}</view>
                        <view class="row2" @tap="toProduct({{item}},{{index}})">
                          <view class="txt-btn" wx:if="{{item.minmemberprice && item.minmemberprice != 0 && item.minmemberprice != '0.00' && item.minmemberprice != item.minprice}}">
                            <view class="l-btn">￥{{item.minmemberprice}}</view>
                            <view class="r-btn" style="{{themeObject.bgStyle}}">会员</view>
                          </view>
                        </view>
                        <view class="row3">
                          <view class="l-cell" style="{{themeObject.colorStyle}}" @tap="toProduct({{item}},{{index}})">
                            <span>￥</span><span class="font16">{{item.minprice}}</span>
                          </view>
                          <view class="r-cell" wx:if="{{item.storage && !isClose}}">
                            <view wx:if="{{item.cart_quantity}}" class="ico border-ico" style="{{themeObject.borderStyle}}{{themeObject.colorStyle}}" catchtap="cutToCart({{item}},{{index}})">-</view>
                            <view wx:if="{{item.cart_quantity}}" class="txt">{{item.cart_quantity}}</view>
                            <view class="ico color-white" style="{{item.cart_quantity ? themeObject.bgStyle : 'background-color:#ccc;'}}" catchtap="addToCart({{item}},{{index}})">+</view>
                          </view>
                        </view>
                      </view>
                    </view>
                  </repeat>
                </view>
              </view>
            </repeat>
          </block>
        </view>
      </view>
    </block>
  </view>
  <bottomMenu
    current="qyshop"
    :allowNav.sync="allowNav"
    :globalData.sync="globalData"
    :isIpx.sync="isIpx"
    :themeObject.sync="themeObject">
  </bottomMenu>
  <block wx:if="{{showAuth}}">
    <auth :pageurl.sync="pageurl" :themeObject.sync="themeObject" :globalData.sync="globalData"></auth>
  </block>
  <block wx:if="{{afterLoad}}">
    <view class="fix-bottom gray-bottom" wx:if="{{isClose}}"><view class="inner">很抱歉，本店已打烊</view></view>
    <view class="fix-bottom" wx:elif="{{totalPrice > 0}}">
      <view class="inner">
        <view class="ico-cell flex_left">
          <view class="ico" style="{{themeObject.bgStyle}}" @tap="clickCart">
            <text class="al al-shangpin"></text>
            <view wx:if="{{cartNumber <= 99}}" class="num-area" style="{{themeObject.bgStyle}}">{{cartNumber}}</view>
            <view wx:else class="num-area font12" style="{{themeObject.bgStyle}}">..</view>
          </view>
        </view>
        <view class="flex_cell align_center bold">
          <text class="font16">￥</text>
          <text class="font20">{{orderPrice}}</text>
        </view>
        <view wx:if="{{totalPrice > 0}}" class="btn" style="{{themeObject.bgStyle}}" @tap="toOrder">确认</view>
        <view wx:else class="btn bg-gray color-white">确认</view>
      </view>
    </view>
  </block>
  <qyproductOptions
    :selectedOption.sync="selectedOption"
    :selectedOptionIndex.sync="selectedOptionIndex"
    :clickProduct.sync="clickProduct"
    :themeObject.sync="themeObject"
    :userInfo.sync="userInfo">
  </qyproductOptions>
  <view wx:if="{{cartList.length}}" class="product-cart-area columnarea" :class="{'fade-out' : showCart, 'fade-in' : !showCart}">
    <view class="column-content" bindtap="closeCart"></view>
    <view class="product-box columnarea" :class="{'slide-out' : showCart, 'slide-in' : !showCart}">
      <view class="part1 flex_left w_100 pb10">
        <view class="flex_left flex_cell bold">已选商品</view>
        <view class="flex_right color-gray" @tap="clearCart"><text class="al al-lajitong"></text>清空</view>
      </view>
      <scroll-view class="column-content part2" style="position:relative;">
        <view class="list-area">
          <repeat for="{{cartList}}" item="item" index="index">
            <view class="item">
              <view class="pic" @tap="toProduct({{item}},{{index}})">
                <image wx:if="{{item.cartOption}}" mode="aspectFill" src="{{item.cartOption.photo}}"></image>
                <image wx:else mode="aspectFill" src="{{item.photo}}"></image>
              </view>
              <view class="txt-cell">
                <view class="row1" @tap="toProduct({{item}},{{index}})">{{item.title}}</view>
                <view class="row2 color-gray" wx:if="{{item.cartOption}}" @tap="toProduct({{item}},{{index}})">{{item.cartOption.title}}</view>
                <view class="row3">
                  <view class="l-cell" style="{{themeObject.colorStyle}}" @tap="toProduct({{item}},{{index}})">
                    <span>￥</span><span class="font16">{{item.minprice}}</span>
                  </view>
                  <view class="r-cell" wx:if="{{item.storage && !isClose}}">
                    <view wx:if="{{item.cart_quantity}}" class="ico border-ico" style="{{themeObject.borderStyle}}{{themeObject.colorStyle}}" catchtap="cutToCart1({{item}},{{index}})">-</view>
                    <view wx:if="{{item.cart_quantity}}" class="txt">{{item.cart_quantity}}</view>
                    <view class="ico color-white" style="{{item.cart_quantity ? themeObject.bgStyle : 'background-color:#ccc;'}}" catchtap="addToCart1({{item}},{{index}})">+</view>
                  </view>
                </view>
              </view>
            </view>
          </repeat>
        </view>
      </scroll-view>
    </view>
  </view>
  <popup2 :show.sync="showMdPop" @close.user="closeMdPop" height="60%">
    <popup-header2
      leftText="关闭"
      @on-click-left.user="closeMdPop"
      rightText="确定"
      @on-click-right.user="confirmMd">
    </popup-header2>
    <scroll-view scroll-y="true">
      <view class="mdpop-list">
        <repeat for="{{mdList}}" item="item" index="index">
          <label class="radio scroll_item flex_left" @tap.stop="clickMd({{item}},{{index}})">
            <view class="flex_left radio-cell">
              <radio class="dotradio" value="{{item.id}}" checked="{{item.checked}}"/>
            </view>
            <view class="flex_cell flex_left">
              <view class="w_100">
                <view class="clamp1 font18 bold">{{item.title}}</view>
                <view>{{item.address}}</view>
              </view>
            </view>
            <view class="flex_right ml10">
              <view>
                <view class="font12 color-gray align_center">距您</view>
                <view class="font12 color-gray align_center">{{item.distance}}</view>
              </view>
            </view>
          </label>
        </repeat>
      </view>
    </scroll-view>
  </popup2>
</template>
<script>
import wepy from 'wepy'
import Config from '@/config'
import Util from '@/libs/util'
import Time from '@/libs/time'
import BottomMenu from '@/components/bottomMenu'
import Auth from '@/components/auth'
import QyproductOptions from '@/components/store/qyproduct-options'
import Popup from '@/components/popup'
import PopupHeader from '@/components/popup-header'
export default class extends wepy.page {
  components = {
    bottomMenu: BottomMenu,
    auth: Auth,
    qyproductOptions: QyproductOptions,
    'popup2': Popup,
    'popup-header2': PopupHeader
  }
  data = {
    globalData: {},
    userInfo: {},
    themeObject: {},
    productList: [],
    disList: false,
    sysParams: {},
    classData: [],
    disClass: false,
    classid: 0,
    classIndex: 0,
    listObject: {},
    isScroll: false,
    allowNav: false,
    isIpx: false,
    disBanner: false,
    bannerData: [],
    showAuth: false,
    pageurl: '',
    isClose: false,
    afterLoad: false,
    orderPrice: '0.00',
    totalPrice: 0,
    selectedOption: {},
    selectedOptionIndex: 0,
    clickProduct: {},
    cartList: [],
    showCart: false,
    cartNumber: 0,
    dcType: 3, // 1: 外卖 2: 自取  3: 堂食
    mdList: [],
    selectedMd: null,
    userLocation: {},
    showMdPop: false
  }
  setClassActive (index) {
    for (let i = 0; i < this.classData.length; i++) {
      if (i !== index && this.classData[i].clicked) {
        this.classData[i].clicked = false
        break
      }
    }
    this.classid = this.classData[index].id
    this.classIndex = index
    this.classData[index].clicked = true
  }
  onPageScroll (e) {
    let _this = this
    let query = wx.createSelectorQuery()
    query.select(`#right-container`).boundingClientRect()
    query.select(`#product-${_this.classid}`).boundingClientRect()
    query.select(`#product-${_this.classData[_this.scrollIndex].id}`).boundingClientRect()
    query.exec(function (res) {
      let rightContainer = res[0]
      let productContainer = res[1]
      let scrollContainer = res[2]
      let scrollTop = productContainer.top - rightContainer.top
      _this.topObject[_this.classid].top = productContainer.top
      if (_this.afterClickClass) {
        if (scrollTop > rightContainer.top) {
          _this.isScroll = true
        } else {
          _this.isScroll = false
        }
      } else {
        // console.log('in pagescroll')
        // console.log('this.scrollIndex=', _this.scrollIndex)
        // console.log(e)
        // console.log(_this.topObject)
        // console.log(rightContainer)
        // console.log(productContainer)
        // console.log(scrollContainer)
        // console.log(_this.afterClickClass)
        // console.log('this.classid=', _this.classid)
        if (e.scrollTop > rightContainer.top) {
          let est = e.scrollTop
          _this.isScroll = true
          let prevClass = {}
          let nextClass = {}
          let prevIndex = _this.scrollIndex - 1
          if (prevIndex >= 0) {
            let prevClassid = _this.classData[prevIndex].id
            prevClass = _this.topObject[prevClassid]
          }
          let nextIndex = _this.scrollIndex + 1
          if (nextIndex < _this.classData.length) {
            let nextClassid = _this.classData[nextIndex].id
            nextClass = _this.topObject[nextClassid]
          }
          // console.log(prevClass)
          // console.log(nextClass)
          if (prevClass && prevClass.top) {
            if (est < scrollContainer.top) {
              _this.scrollIndex = prevClass.index
              _this.classid = prevClass.id
              _this.classIndex = prevIndex
              _this.setClassActive(_this.classIndex)
            }
          } else if (nextClass && nextClass.top) {
            if (est >= nextClass.top) {
              _this.scrollIndex = nextClass.index
              _this.classid = nextClass.id
              _this.classIndex = nextIndex
              _this.setClassActive(_this.classIndex)
            }
          }
        } else {
          _this.isScroll = false
          _this.scrollIndex = 0
          _this.classid = _this.classData[0].id
          _this.setClassActive(0)
        }
      }
      // console.log('\n\n\n\n')
      _this.$apply()
    })
  }
  getProductList (toClass, callback) {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/miniprogram/productlist`,
      data: {classid: this.classid, limit: this.limit, page: this.pageObject[this.classid].page}
    }).then(res => {
      const retdata = res.data
      this.isLoading = false
      this.allowNav = true
      if (retdata.code === 0) {
        if (this.listObject[this.classid]) {
          this.listObject[this.classid] = this.listObject[this.classid].concat(retdata.data)
        } else {
          this.listObject[this.classid] = retdata.data
        }
        callback && callback()
        this.$apply()
        if (toClass) {
          this.scrollToClass()
        }
      }
    })
  }
  getBanner () {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/miniprogram/getBanner`,
      data: {page: 'home'}
    }).then(res => {
      const retdata = res.data
      if (retdata.code === 0) {
        this.bannerData = retdata.data
        this.disBanner = true
        this.$apply()
      }
    })
  }
  checkClose () {
    let now = new Date().getTime()
    let nowstr = new Time(now).dateFormat('hh:mm:ss')
    console.log('当前时间=', nowstr)
    let closestr = this.sysParams.closestore
    console.log('闭店时间=', closestr)
    let curTime = new Date(`2021/01/01 ${nowstr}`).getTime()
    console.log('当前时间=', curTime)
    let closeTime = new Date(`2021/01/01 ${closestr}`).getTime()
    console.log('闭店时间=', closeTime)
    if (curTime >= closeTime) {
      this.isClose = true
    }
    this.afterLoad = true
  }
  getHomeData () {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/miniprogram/home`,
      data: {limit: 1000, storeid: this.selectedMd.id}
    }).then(res => {
      const retdata = res.data
      if (retdata.code === 0) {
        this.homeData = retdata
        let fpclass = retdata.fpclass
        if (fpclass.length) {
          this.classid = fpclass[0].id
          this.classIndex = 0
          for (let i = 0; i < fpclass.length; i++) {
            this.topObject[fpclass[i].id] = {index: i, id: fpclass[i].id}
            this.pageObject[fpclass[i].id] = {page: 1}
          }
          fpclass[0].clicked = true
        }
        this.classData = fpclass
        this.disClass = true
        let fpdata = retdata.fpdata
        for (let i = 0; i < fpdata.length; i++) {
          let curd = fpdata[i]
          if (curd.options && curd.options.length) {
            for (let j = 0; j < curd.options.length; j++) {
              let curo = curd.options[j]
              if (curo.cart_id) {
                this.cartList.push({...curd, cartOption: curo, productindex: i, optionindex: j})
              }
            }
          } else if (curd.cart_id) {
            this.cartList.push(curd)
          }
        }
        this.computeCartNum()
        this.productList = fpdata
        this.disList = true
        this.allowNav = true
        this.computeOrder()
        // this.getProductList()
        this.$apply()
      }
    })
  }
  handlePageData () {
    this.globalData = this.$parent.globalData
    Util.appInit(this.globalData, this)
    this.userInfo = this.globalData.userInfo
    this.sysParams = this.globalData.SystemParams
    this.mdList = this.globalData.Store
    wepy.getLocation({
      type: 'gcj02'
    }).then(res => {
      console.log('======================获取微信位置***************************8')
      // 我的位置 {accuracy: 65, errMsg: 'getLocation:ok', horizontalAccuracy: 65, latitude: 28.24595, longitude: 113.08093, speed: -1 verticalAccuracy: 65}
      console.log(res)
      if (res.errMsg.indexOf('getLocation:fail:') > -1) {
        wepy.showToast({
          title: '获取位置信息失败，请查看您的手机定位是否开启',
          icon: 'none',
          duration: 2000
        })
        this.selectedMd = this.mdList[0]
      } else {
        this.userLocation = {latitude: res.latitude, longitude: res.longitude}
        let minIndex = 0
        let minDistance = 0
        for (let i = 0; i < this.mdList.length; i++) {
          let curMd = this.mdList[i]
          curMd.distance = Util.getDistance(res.latitude, res.longitude, curMd.latitude, curMd.longitude)
          let dis = parseFloat(curMd.distance.replace('m', ''))
          if (curMd.distance.indexOf('km') > -1) {
            dis = parseFloat(curMd.distance.replace('km', '')) * 1000
          }
          if (i === 0) {
            minIndex = 0
            minDistance = dis
          } else if (dis < minDistance) {
            minIndex = i
            minDistance = dis
          }
        }
        this.selectedMd = this.mdList[minIndex]
      }
      this.getHomeData()
    }, error => {
      wepy.showToast({
        title: '获取位置信息失败，请查看您的手机定位是否开启',
        icon: 'none',
        duration: 2000
      })
    })
    this.checkClose()
    this.getBanner()
  }
  onLoad (options) {
    this.options = options
    this.pageurl = Util.objectToUrl('/pages/qyshop', this.options)
    this.limit = 5
    this.pageObject = {}
    this.afterClickClass = false
    this.scrollToClassIng = false
    this.topObject = {}
    this.scrollIndex = 0
    this.isLoading = false
    if (this.$parent.globalData.flag.bokaAuth) {
      this.handlePageData()
    } else {
      this.$parent.loadCallback = () => {
        this.handlePageData()
      }
    }
    wepy.getSystemInfo().then(res => {
      if (res.model.substring(0, res.model.indexOf('X')) + 'X' === 'iPhone X') {
        this.isIpx = true
      }
      this.$apply()
    })
    this.$apply()
  }
  scrollToClass (e) {
    let _this = this
    this.scrollIndex = this.classIndex
    let query = wx.createSelectorQuery()
    query.selectViewport().scrollOffset()
    query.select(`#page-container`).boundingClientRect()
    query.select(`#right-container`).boundingClientRect()
    query.select(`#product-${this.classid}`).boundingClientRect()
    query.exec(function (res) {
      // console.log('in scrolltoclass')
      // console.log(res[3])
      // console.log(res[2])
      // console.log('\n\n\n')
      _this.scrollToClassIng = true
      wepy.pageScrollTo({
        scrollTop: res[3].top - res[2].top,
        duration: 300,
        success: () => {
          _this.afterClickClass = false
          _this.scrollToClassIng = false
          _this.$apply()
        }
      })
      _this.$apply()
    })
  }
  onShareAppMessage () {
    const lastshareuid = this.options.share_uid
    let shareurl = `/pages/qyshop?share_uid=${this.userInfo.uid}&share_wid=${this.globalData.Wid}&wid=${this.globalData.Wid}&comefrom=${Config.AppName}`
    if (lastshareuid) {
      shareurl = `${shareurl}&lastshareuid=${lastshareuid}`
    }
    let backUrl = encodeURIComponent(shareurl)
    shareurl = `${shareurl}&currentUrl=${backUrl}`
    return {
      path: shareurl
    }
  }
  addCartEvent () {
    this.isCarting = true
    const item = this.clickProduct
    const index = this.clickIndex
    let ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/addCart`
    let type = 'add'
    let ajaxParams = {}
    if (this.addOption) {
      if (this.selectedOption.cart_id) {
        ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/update`
        type = 'update'
        ajaxParams.id = this.selectedOption.cart_id
        ajaxParams.quantity = this.selectedOption.cart_quantity + 1
      } else {
        ajaxParams.pid = item.id
        ajaxParams.poid = this.selectedOption.id
        ajaxParams.storeid = this.selectedMd.id
      }
    } else {
      if (item.cart_id) {
        ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/update`
        type = 'update'
        ajaxParams.id = item.cart_id
        ajaxParams.quantity = item.cart_quantity + 1
      } else {
        ajaxParams.pid = item.id
        ajaxParams.storeid = this.selectedMd.id
      }
    }
    wepy.request({
      url: ajaxUrl,
      data: ajaxParams,
      method: 'post'
    }).then(res => {
      const data = res.data
      this.isCarting = false
      if (data.code === 0) {
        if (this.addOption) {
          if (this.selectedOption.cart_id) { // 更新商品规格购物车
            this.selectedOption.cart_quantity = ajaxParams.quantity
          } else { // 添加商品规格购物车
            this.selectedOption.cart_id = data.id
            this.selectedOption.cart_quantity = 1
          }
          item.options[this.selectedOptionIndex] = this.selectedOption
          item.cart_quantity = item.cart_quantity + 1
          item.cartOption = this.selectedOption
          item.optionindex = this.selectedOptionIndex
          this.$invoke('qyproductOptions', 'closeOptions')
        } else {
          if (item.cart_id) {
            item.cart_quantity = ajaxParams.quantity
          } else {
            item.cart_id = data.id
            item.cart_quantity = 1
          }
        }
        item.productindex = this.clickIndex
        this.productList[index] = item
        if (type === 'add') {
          this.cartList.push(item)
        } else {
          for (let i = 0; i < this.cartList.length; i++) {
            let cur = this.cartList[i]
            if ((this.addOption && cur.cartOption && cur.cartOption.id === this.selectedOption.id) || (!this.addOption && cur.id === this.clickProduct.id)) {
              this.cartList[i] = item
              break
            }
          }
        }
        this.computeOrder()
        this.computeCartNum()
        this.$apply()
      } else {
        wepy.showToast({
          title: data.msg,
          icon: 'none'
        })
      }
    })
  }
  cutCartEvent () {
    this.isCarting = true
    const item = this.clickProduct
    const index = this.clickIndex
    let ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/update`
    let ajaxParams = {id: item.cart_id}
    if (item.cart_quantity > 1) {
      ajaxParams.quantity = item.cart_quantity - 1
    } else {
      ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/delete`
    }
    wepy.request({
      url: ajaxUrl,
      data: ajaxParams,
      method: 'post'
    }).then(res => {
      const data = res.data
      this.isCarting = false
      if (data.code === 0) {
        if (item.cart_quantity > 1) {
          this.productList[index].cart_quantity = ajaxParams.quantity
        } else {
          this.productList[index].cart_quantity = 0
          this.productList[index].cart_id = 0
        }
        this.computeOrder()
        this.computeCartNum()
        this.$apply()
      } else {
        wepy.showToast({
          title: data.msg,
          icon: 'none'
        })
      }
    })
  }
  computeOrder () {
    let total = 0
    for (let i = 0; i < this.productList.length; i++) {
      let curd = this.productList[i]
      if (curd.options && curd.options.length) {
        for (let j = 0; j < curd.options.length; j++) {
          let curo = curd.options[j]
          if (curo.cart_id && curo.cart_quantity) {
            total += parseFloat(curo.price) * curo.cart_quantity
          }
        }
      } else if (curd.cart_id && curd.cart_quantity) {
        total += parseFloat(curd.minprice) * curd.cart_quantity
      }
    }
    this.orderPrice = total.toFixed(2)
    this.totalPrice = total
  }
  computeCartNum () {
    let num = 0
    for (let i = 0; i < this.cartList.length; i++) {
      let curd = this.cartList[i]
      if (!curd.cart_quantity) {
        this.cartList.splice(i, 1)
      } else {
        if (curd.cartOption) {
          num += curd.cartOption.cart_quantity
        } else {
          num += curd.cart_quantity
        }
      }
    }
    this.cartNumber = num
  }
  methods = {
    switchType (val) {
      this.dcType = val
      this.$apply()
    },
    clickClass (item, index) {
      if (!item.clicked) {
        this.setClassActive(index)
        this.afterClickClass = true
        if (!this.listObject[item.id] || !this.listObject[item.id].length) {
          this.pageObject[item.id] = {page: 1}
          this.getProductList(true)
        } else {
          this.scrollToClass()
        }
        this.$apply()
      }
    },
    toProduct (item, index) {
      wepy.navigateTo({url: `/pages/product?id=${item.id}`})
    },
    clickBanner (e) {
      Util.clickBanner(e, this)
    },
    addToCart (item, index) {
      if (this.isCarting) return false
      this.clickProduct = item
      this.clickIndex = index
      if (item.options && item.options.length) {
        if (!item.selectedOption) {
          item.selectedOption = item.options[0]
          item.selectedOptionIndex = 0
        }
        this.selectedOption = item.selectedOption
        this.selectedOptionIndex = item.selectedOptionIndex
        this.$invoke('qyproductOptions', 'showOptions')
      } else {
        this.addOption = false
        this.cartType = 'add'
        if (this.userInfo.subscribe === 0) {
          this.showAuth = true
          this.$apply()
          return false
        }
        this.addCartEvent()
      }
    },
    cutToCart (item, index) {
      if (this.isCarting) return false
      this.clickProduct = item
      this.clickIndex = index
      if (item.options && item.options.length) {
        this.showCart = true
      } else {
        this.cartType = 'cut'
        if (this.userInfo.subscribe === 0) {
          this.showAuth = true
          this.$apply()
          return false
        }
        this.cutCartEvent()
      }
    },
    addToCart1 (item, index) {
      if (this.isCarting) return false
      let ajaxParams = {}
      if (item.cartOption) {
        ajaxParams.id = item.cartOption.cart_id
        ajaxParams.quantity = item.cartOption.cart_quantity + 1
      } else {
        ajaxParams.id = item.cart_id
        ajaxParams.quantity = item.cart_quantity + 1
      }
      this.isCarting = true
      wepy.request({
        url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/update`,
        data: ajaxParams,
        method: 'post'
      }).then(res => {
        const data = res.data
        this.isCarting = false
        if (data.code === 0) {
          if (item.cartOption) {
            item.cartOption.cart_quantity = ajaxParams.quantity
            item.options[item.optionindex] = item.cartOption
            item.cart_quantity = item.cart_quantity + 1
          } else {
            item.cart_quantity = ajaxParams.quantity
          }
          this.cartList[index] = item
          this.productList[item.productindex] = item
          this.computeOrder()
          this.computeCartNum()
          this.$apply()
        } else {
          wepy.showToast({
            title: data.msg,
            icon: 'none'
          })
        }
      })
    },
    cutToCart1 (item, index) {
      if (this.isCarting) return false
      let ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/update`
      let type = 'update'
      let ajaxParams = {}
      if (item.cartOption) {
        ajaxParams.id = item.cartOption.cart_id
        if (item.cartOption.cart_quantity > 1) {
          ajaxParams.quantity = item.cartOption.cart_quantity - 1
        } else {
          type = 'delete'
          ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/delete`
        }
      } else {
        ajaxParams.id = item.cart_id
        if (item.cart_quantity > 1) {
          ajaxParams.quantity = item.cart_quantity - 1
        } else {
          type = 'delete'
          ajaxUrl = `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/delete`
        }
      }
      wepy.request({
        url: ajaxUrl,
        data: ajaxParams,
        method: 'post'
      }).then(res => {
        const data = res.data
        this.isCarting = false
        if (data.code === 0) {
          if (item.cartOption) {
            if (type === 'update') {
              item.cartOption.cart_quantity = ajaxParams.quantity
            } else {
              item.cartOption.cart_id = 0
              item.cartOption.cart_quantity = 0
            }
            item.cart_quantity = item.cart_quantity - 1
            this.productList[item.productindex].options[item.optionindex] = item.cartOption
            this.productList[item.productindex].cart_quantity = item.cart_quantity
          } else {
            if (type === 'update') {
              item.cart_quantity = ajaxParams.quantity
            } else {
              item.cart_id = 0
              item.cart_quantity = 0
            }
            this.productList[item.productindex] = item
          }
          this.cartList[index] = item
          this.computeOrder()
          this.computeCartNum()
          this.$apply()
        } else {
          wepy.showToast({
            title: data.msg,
            icon: 'none'
          })
        }
      })
    },
    toOrder () {
      let ids = []
      for (let i = 0; i < this.cartList.length; i++) {
        let curd = this.cartList[i]
        if (curd.cart_id) {
          ids.push(curd.cart_id)
        } else if (curd.cartOption) {
          ids.push(curd.cartOption.cart_id)
        }
      }
      if (!ids.length) {
        wepy.showToast({
          title: '请选择下单商品',
          icon: 'none'
        })
      }
      let idstr = encodeURIComponent(ids.join(','))
      let url = `/pages/qyorder?cartid=${idstr}&dctype=${this.dcType}&storeid=${this.selectedMd.id}`
      if (this.options.orderid) url = `${url}&orderid=${this.options.orderid}`
      wepy.navigateTo({url: url})
    },
    closeCart () {
      this.showCart = false
      this.$apply()
    },
    clickCart () {
      this.showCart = true
      this.$apply()
    },
    clearCart () {
      if (this.clearIng) return false
      wepy.showModal({
        title: '',
        content: '确定要清空购物车吗?'
      }).then(res => {
        if (res.confirm) {
          this.clearIng = true
          wepy.request({
            url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/cart/delete`,
            data: {id: -1},
            method: 'post'
          }).then(res => {
            this.submitIng = false
            const data = res.data
            if (data.code === 0) {
              for (let i = 0; i < this.productList.length; i++) {
                let curd = this.productList[i]
                if (curd.options && curd.options.length) {
                  for (let j = 0; j < curd.options.length; j++) {
                    this.productList[i].options[j].cart_id = 0
                    this.productList[i].options[j].cart_quantity = 0
                  }
                }
                this.productList[i].cart_id = 0
                this.productList[i].cart_quantity = 0
              }
              this.cartList = []
              this.showCart = false
              this.computeOrder()
              this.cartNumber = 0
              console.log(this.productList)
              this.$apply()
            } else {
              wepy.showToast({
                title: data.msg,
                icon: 'none'
              })
            }
          })
        }
      })
    },
    closeMdPop () {
      this.showMdPop = false
      this.$apply()
    },
    chooseMd () {
      this.clickedMd = this.selectedMd
      for (let i = 0; i < this.mdList.length; i++) {
        if (this.mdList[i].id === this.selectedMd.id) {
          this.mdList[i].checked = true
        } else {
          this.mdList[i].checked = false
        }
      }
      this.showMdPop = true
      this.$apply()
    },
    clickMd (item, index) {
      if (!item.checked) {
        for (let i = 0; i < this.mdList.length; i++) {
          if (this.mdList[i].checked) {
            this.mdList[i].checked = false
            break
          }
        }
        let checked = !item.checked
        this.clickedMd = item
        this.mdList[index].checked = checked
      }
      this.$apply()
    },
    confirmMd () {
      if (this.clickedMd && this.clickedMd.id) {
        this.selectedMd = this.clickedMd
        this.distance = Util.getDistance(this.userLocation.latitude, this.userLocation.longitude, this.selectedMd.latitude, this.selectedMd.longitude)
      }
      this.showMdPop = false
      this.$apply()
    }
  }
  events = {
    cancelLogin () {
      this.showAuth = false
      this.$apply()
    },
    afterAuth () {
      this.globalData = this.$parent.globalData
      this.userInfo = this.globalData.userInfo
      this.showAuth = false
      if (this.cartType === 'add') {
        this.addCartEvent()
      } else {
        this.cutCartEvent()
      }
      this.$apply()
    },
    optionToCart () {
      this.addOption = true
      this.cartType = 'add'
      if (this.userInfo.subscribe === 0) {
        this.showAuth = true
        this.$apply()
        return false
      }
      this.addCartEvent()
    }
  }
}
</script>
