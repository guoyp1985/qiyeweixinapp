<style lang="less">
.bk-default-productitem{
  .picarea{
    border-top-left-radius: 10rpx;border-top-right-radius: 10rpx;
    .pic{border-top-left-radius: 10rpx;border-top-right-radius: 10rpx;}
  }
  .t-icon{
    position:absolute;left:0;top:20rpx;
    border-top-right-radius:40rpx;border-bottom-right-radius:40rpx;
    background-color:#fff;
    padding:10rpx 20rpx 10rpx 10rpx;
    font-size:24rpx;
    box-shadow: rgba(0, 0, 0, 0.1) 0 0 8rpx 2rpx;
  }
  .desbox{
    height:200rpx;position:relative;
    .txt1{height:40rpx;}
    .txt2{height:40rpx;}
  }
  .btn-area{position:absolute;left:10rpx;bottom:10rpx;right:10rpx;}
  .circle-btn{min-width:100rpx;}
  .fix-box{
    font-size:24rpx;
    display:flex;justify-content:flex-start;align-items: center;
    .num{
      // background-color:#fff;
      width:40rpx;height:30rpx;display:flex;justify-content:center;align-items: center;color:#f64635;
      border-radius:10rpx;box-sizing: border-box;
    }
    .num.big{width:60rpx;}
    .txt{
      width:20rpx;height:30rpx;
      display:flex;justify-content:center;align-items: center;
      font-weight:bold;
    }
  }
}
</style>
<template>
  <repeat for="{{productData}}" index="index" item="product">
    <view @tap="toFactoryProduct({{product}})" class="bk-default-productitem scroll_item font14">
      <view class="inner list-shadow">
        <view class="picarea">
          <view class="pic" wx:if="{{product.listphoto && product.listphoto != ''}}" style="background-image:url('{{product.listphoto}}');"></view>
          <view class="pic" wx:else style="background-image:url('{{product.photo}}');"></view>
        </view>
        <view class="desbox" style="overflow:hidden;">
          <view class="align_left clamp1 txt1">
            <text style="word-break:break-all;">{{product.title}}</text>
          </view>
          <view class="clamp1 txt2" style="{{themeObject.colorStyle}}"><text style="word-break:break-all;">{{product.sellingpoint}}</text></view>
          <block wx:if="{{tmpType == 'cron'}}">
            <view class="fix-box" wx:if="{{product.ontime_str && product.ontime_str != ''}}">
              <text>开团时间</text>
              <text class="ml5" style="{{themeObject.colorStyle}}">{{product.ontime_str}}</text>
            </view>
          </block>
          <block wx:else>
            <view class="fix-box" wx:if="{{product.offshelftime && product.offshelftime != '' && product.interval}}">
              <text>距截团</text>
              <text :class="{big: (product.lefthour.length > 2 || product.lefthour >= 100)}" class="num ml5" style="{{themeObject.bgStyle}}">{{product.lefthour}}</text>
              <text class="txt" style="{{themeObject.colorStyle}}">:</text>
              <text class="num" style="{{themeObject.bgStyle}}">{{product.leftminute}}</text>
              <text class="txt" style="{{themeObject.colorStyle}}">:</text>
              <text class="num" style="{{themeObject.bgStyle}}">{{product.leftsecond}}</text>
            </view>
          </block>
          <view class="flex_left btn-area">
            <view class="flex_cell flex_left">
              <!-- <view class="clamp1 font12" style="{{themeObject.colorStyle}}" wx:if="{{product.minprice && product.maxprice && product.minprice != '' && product.maxprice != '' && product.minprice != product.maxprice}}">￥ {{product.minprice}}-{{product.maxprice}}</view> -->
              <view class="clamp1 font14" style="{{themeObject.colorStyle}}" wx:if="{{product.minprice && product.minprice != ''}}">￥ <text style="margin-left:1px;">{{product.minprice}}</text></view>
              <view class="clamp1 font14" style="{{themeObject.colorStyle}}" wx:else>￥ <text style="margin-left:1px;">{{product.price}}</text></view>
            </view>
            <block wx:if="{{tmpType == 'cron'}}">
              <view class="pl10 pr5 pb5 pt5 flex_right">
                <view class="circle-btn flex_center" style="{{themeObject.bgStyle}}">即将开团</view>
              </view>
            </block>
            <block wx:else>
              <block wx:if="{{product.offshelftime && product.offshelftime != '' && !product.interval && product._offshelftime}}">
                <view class="pl10 pr5 pb5 pt5 flex_right">
                  <view class="circle-btn bg-gray color-white flex_center" >已下架</view>
                </view>
              </block>
              <block wx:elif="{{afterSys}}">
                <block wx:if="{{product.storage > 0}}">
                  <block wx:if="{{(OnlyRetailerBuy && userInfo.regwid && userInfo.bindstatus) || !OnlyRetailerBuy}}">
                    <view class="pl10 pr5 pb5 pt5 flex_right" data-data="{{product}}" data-pageindex="{{pageIndex}}" data-index="{{index}}" catchtap="clickBuy">
                      <view class="circle-btn flex_center" style="{{themeObject.bgStyle}}">抢购</view>
                    </view>
                  </block>
                  <block wx:if="{{OnlyRetailerBuy && (!userInfo.regwid || !userInfo.bindstatus)}}">
                    <view class="pl10 pr5 pb5 pt5 flex_right" catchtap="retailerBuy">
                      <view class="circle-btn flex_center font12" style="{{themeObject.bgStyle}}">找店主下单</view>
                    </view>
                  </block>
                </block>
                <view wx:else class="pl10 pr5 pb5 pt5 flex_right">
                  <view class="circle-btn flex_center bg-gray color-white">已售罄</view>
                </view>
              </block>
            </block>
          </view>
        </view>
      </view>
    </view>
  </repeat>
</template>
<script>
  import wepy from 'wepy'
  import Config from '@/config'

  export default class extends wepy.component {
    props = {
      productData: {
        type: Array,
        default: []
      },
      product: {
        type: Object,
        default: {}
      },
      userInfo: {
        type: Object,
        default: {}
      },
      isAdmin: {
        type: Boolean,
        default: false
      },
      navType: {
        type: String,
        default: 'navigateTo'
      },
      themeObject: {
        type: Object,
        default: {}
      },
      OnlyRetailerBuy: {
        type: Boolean,
        default: false
      },
      afterSys: {
        type: Boolean,
        default: false
      },
      from: {
        type: String,
        default: 'home'
      },
      tmpType: {
        type: String,
        default: ''
      },
      pageIndex: {
        type: Number,
        default: 0
      },
      options: {
        type: Object,
        default: {}
      },
      ordertype: {
        type: Number,
        default: 0
      }
    }
    data = {
    }
    onLoad () {
    }
    methods = {
      toFactoryProduct (data) {
        let params = []
        if (this.options.share_uid) {
          params.push(`share_uid=${this.options.share_uid}`)
        }
        if (this.options.shareuser) {
          params.push(`shareuser=${this.options.shareuser}`)
        }
        if (this.from === 'home') {
          wepy.setStorageSync('selectedProduct', data)
          let navurl = `/${Config.Router.product}?id=${data.id}&fid=${Config.Fid}&from=home&select=product&type=fpimport`
          if (params.length) {
            let pstr = params.join('&')
            navurl = `${navurl}&${pstr}`
          }
          wepy.navigateTo({url: navurl})
        } else {
          wepy.setStorageSync('selectedProduct', data)
          let navurl = `/${Config.Router.product}?id=${data.id}&type=fpimport&fid=${Config.Fid}&select=product`
          if (this.ordertype) {
            navurl = `${navurl}&ordertype=${this.ordertype}`
          }
          if (params.length) {
            let pstr = params.join('&')
            navurl = `${navurl}&${pstr}`
          }
          if (this.navType === 'navigateTo') {
            wepy.navigateTo({url: navurl})
          } else if (this.navType === 'redirectTo') {
            wepy.redirectTo({url: navurl})
          } else if (this.navType === 'reLaunch') {
            wepy.reLaunch({url: navurl})
          } else {
            wepy.navigateTo({url: navurl})
          }
        }
      },
      clickBuy (e) {
        this.$emit('clickBuy', e.currentTarget.dataset)
      },
      retailerBuy () {
        this.$emit('retailerBuy')
      }
    }
  }
</script>
