<style lang="less">
.home-user-page{
  padding-bottom:200rpx;
  .toparea{
    position:relative;padding:40rpx 20rpx;height:300rpx;box-sizing: border-box;color:#fff;
    border-bottom-left-radius:50rpx;border-bottom-right-radius:50rpx;
    /*background: linear-gradient(#F25D5D, #DB293E);*/
    .top-pic{
      .pic-cell{
        width:120rpx;height:120rpx;border-radius:50%;box-sizing: border-box;margin-right:10rpx;
        image{width:100%;height:100%;border-radius:50%;}
      }
    }
    .box-txt{
      background-color:#fff;color:#ee5357;border-radius:5rpx;margin-left:10rpx;font-size:20rpx;
      display:flex;justify-content: center;align-items: center;padding:4rpx 10rpx;
    }
  }
  .box-area{
    width:100%;position:relative;z-index:1;
    padding:0 20rpx;box-sizing: border-box;
    .box-inner{
      width:100%;background-color:#fff;border-radius:10rpx;
      .title{padding:20rpx;font-size:32rpx;box-sizing: border-box;}
      .line-title{
        padding:20rpx;font-size:32rpx;box-sizing: border-box;position:relative;
        .txt{height:100%;width:190rpx;text-align:center;position:relative;z-index:1;background-color:#fff;}
      }
      .line-title .line{
        content:'';display:block;
        position:absolute;left:50%;top:50%;margin-top:-2rpx;margin-left:-150rpx;
        width:300rpx;height:4rpx;
      }
    }
  }
  .box-area1{
    margin-top:-80rpx;
    .pic-item{
      .txt1{font-size:60rpx;text-align:center;}
      .txt2{font-size:24rpx;}
    }
  }
  .block-list{
    display:flex;
    .block-item{
      flex:1;position:relative;text-align:center;
      padding:20rpx 0;
      .block-inner{width:100%;position:relative;box-sizing: border-box;}
      .txt1{font-size:36rpx;color:#333;}
      .txt2{font-size:24rpx;color:#797979;}
    }
    .block-item:not(:last-child) .block-inner:after{
      content:'';display:block;width:1rpx;background-color:#eee;
      position:absolute;right:0;top:20%;bottom:20%;
    }
  }
  .radius-list{
    display:flex;flex-wrap: wrap;
    .radius-item{
      width:25%;position:relative;text-align:center;
      padding:20rpx 0;
      .radius-inner{width:100%;position:relative;box-sizing: border-box;}
      .txt1{
        width:100rpx;height:100rpx;border-radius:50%;
        margin:0 auto;
        box-sizing:border-box;font-size:36rpx;color:#fff;
        display:flex;justify-content:center;align-items:center;
        .al{font-size:44rpx;}
      }
      .txt2{font-size:24rpx;color:#797979;margin-top:10rpx;}
    }
  }
  .scroll_list{
    padding:20rpx;box-sizing: border-box;
    .scroll_item:after{display:none;content:'';}
    .scroll_item:not(:last-child){border-bottom:2rpx dashed #eee;}
    .scroll_item{
      width: 100%;background: #fff;padding: 30rpx 0;box-sizing: border-box;overflow:hidden;position:relative;
      .inner{width:100%;display: flex;position:relative;box-sizing: border-box;}
      .pic{
        width:200rpx;
        image{width:180rpx;height:180rpx;border-radius:15rpx;}
      }
      .avatar{
        width:100rpx;
        image{width:90rpx;height:90rpx;border-radius:50%;}
      }
      .pic-img{
        width:120rpx;
        image{width:110rpx;height:110rpx;border-radius:15rpx;}
      }
      .data_txt{
        flex: 1;overflow: hidden;position:relative;
        .empty-cell{width:240rpx;}
      }
      .btn-list{
        padding-left:10rpx;box-sizing: border-box;
        .btn-item{border-radius:60rpx;}
        .btn-item:not(:last-child){margin-right:10rpx;}
        .btn{padding:8rpx 20rpx;font-size:24rpx;}
      }
    }
    .time-box{
      font-size:24rpx;
      display:flex;justify-content:flex-start;align-items: center;
      .num{
        background-color:#ee5357;color:#fff;
        width:40rpx;height:40rpx;border-radius:10rpx;box-sizing: border-box;
        display:flex;justify-content:center;align-items: center;
      }
      .num.big{width:60rpx;}
      .txt{width:20rpx;height:30rpx;display:flex;justify-content:center;align-items: center;font-weight:bold;}
    }
    .radio-cell{width:50rpx;}
  }
  .order-list{
    .scroll_item:not(:first-child){margin-top:20rpx;}
    .scroll_item{
      background-color:#fdeded;padding:10rpx 0;
      .inner{padding:10rpx 20rpx;border-bottom:#ebdcdc 2rpx dashed;}
      .btn-list{padding-top:10rpx;padding-right:20rpx;}
    }
  }
  .scroll-view{height:330rpx;}
  .al-mark-store:after{content: "\e770";}
  .al-mark-service:after{content: "\e666";}
  .al-mark-orders:after{content: "\e79d";}
  .al-mark-share:after{content: "\e602";}
  .al-mark-invite:after{content: "\e656";}
  .al-mark-income:after{content: "\e669";}
  .al-mark-storeset:after{content: "\e622";}
  .al-mark-message:after{content: "\e79c";}
  .al-mark-businessschool:after{content: "\e677";}
  .al-mark-wxgroups:after{content: "\e666";}
  .al-mark-salestat:after{content: "\e601";}
  .bg-store{background-color:#4281a4;}
  .bg-service{background-color:#6f78f3;}
  .bg-orders{background-color:#bc54fa;}
  .bg-share{background-color:#6699ff;}
  .bg-invite{background-color:#ff0400;}
  .bg-income{background-color:orange;}
  .bg-storeset{background-color:#4281a4;}
  .bg-message{background-color:#4cd964;}
  .bg-businessschool{background-color:#000;}
  .bg-wxgroups{background-color: #6f78f3;}
  .bg-salestart{background-color:#6699ff;}
}
.retailer-modal{
  .avatar{width:200rpx;height:200rpx;border-radius:50%;}
  .form-list{
    padding:0 20rpx 20rpx;box-sizing: border-box;
    .form-item{
      background-color:#fff;box-sizing: border-box;
      box-shadow:0px 0px 3px 1px #e4e4e4;border-radius:4rpx;
      width:100%;min-height:100rpx;display:flex;align-items:center;padding:20rpx;position:relative;
      margin-top:20rpx;
      .title-cell{width:145rpx;height:100%;display: flex;align-items: left;justify-content:flex-start;align-items: center;text-align:left;}
      .input-cell{
        flex:1;height:100%;display:flex;justify-content: flex-end; align-items: center;position:relative;
      }
    }
  }
}
</style>
<template>
  <view class="home-user-page">
    <view class="toparea" style="{{themeObject.linearBgStyle}}">
      <view class="db-flex top-pic">
        <view class="pic-cell flex_left">
          <image mode="aspectFill" src="{{sellerUser.avatar}}"></image>
        </view>
        <view class="flex_cell flex_left">
          <view class="w_100">
            <view class="font16 bold">{{sellerUser.linkman}}</view>
            <view class="mt5 flex_left" wx:if="{{sellerUser.weixinaccount && sellerUser.weixinaccount != ''}}">
              <view>微信号: {{sellerUser.weixinaccount}}</view>
              <view class="box-txt" @tap="copyWechat">复制微信号</view>
            </view>
            <view class="mt5 flex_left" wx:if="{{sellerUser.mobile && sellerUser.mobile != ''}}" @tap="clickMobile">
              <text class="al al-dianhua font20"></text><view>{{sellerUser.mobile}}</view>
            </view>
          </view>
        </view>
        <view class="flex_right pl10" @tap="clickQrcode" wx:if="{{sellerUser.shoukuanma && sellerUser.shoukuanma != ''}}">
          <text class="al al-erweima font30"></text>
        </view>
      </view>
    </view>
    <view class="box-area box-area1">
      <view class="box-inner">
        <view class="line-title flex_center b_bottom_after">
          <view class="line" style="{{themeObject.bgStyle}}"></view>
          <view class="txt" style="{{themeObject.colorStyle}}">下单流程</view>
        </view>
        <view class="flex_center pb10">
          <view class="pic-item" style="{{themeObject.colorStyle}}">
            <view class="pic-inner">
              <view class="txt1 al al-box"></view>
              <view class="txt2">选择商品</view>
            </view>
          </view>
          <view class="flex_center">
            <text class="al al-mjiantou-copy2 font24 color-gray"></text>
          </view>
          <view class="pic-item" style="{{themeObject.colorStyle}}">
            <view class="pic-inner">
              <view class="txt1 al al-dizhi2"></view>
              <view class="txt2">填收货地址</view>
            </view>
          </view>
          <view class="flex_center">
            <text class="al al-mjiantou-copy2 font24 color-gray"></text>
          </view>
          <view class="pic-item" style="{{themeObject.colorStyle}}">
            <view class="pic-inner">
              <view class="txt1 bold al al-tongzhi"></view>
              <view class="txt2">通知店长接单</view>
            </view>
          </view>
          <view class="flex_center">
            <text class="al al-mjiantou-copy2 font24 color-gray"></text>
          </view>
          <view class="pic-item" style="{{themeObject.colorStyle}}">
            <view class="pic-inner">
              <view class="txt1 al al-zijinguanli font30"></view>
              <view class="txt2">转账给店长</view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="box-area mt20 mb20">
      <view class="box-inner">
        <view class="o-tab">
          <view class="tab-item active">
            <view class="tab-inner" style="{{themeObject.colorStyle}}">
              <text>今日团品</text>
              <view class="line" style="{{themeObject.bgStyle}}"></view>
            </view>
          </view>
        </view>
        <block wx:if="{{disProduct}}">
          <view wx:if="{{!productData.length || !productData[0].length}}" class="flex_empty">上等好货，敬请期待</view>
          <view wx:else class="product-list scroll_list">
            <repeat for="{{productData}}" item="product" index="pageindex">
              <repeat for="{{product}}" item="item" index="index">
                <view class="scroll_item">
                  <view class="inner">
                    <view class="pic" data-data="{{item}}" @tap="toFactoryProduct({{item}})">
                      <image mode="aspectFill" src="{{item.photo}}" lazy-load></image>
                    </view>
                    <view class="data_txt" data-data="{{item}}" @tap="toFactoryProduct({{item}})">
                      <view class="mb5 clamp1 font16">{{item.title}}</view>
                      <view class="mb5" style="{{themeObject.colorStyle}}" wx:if="{{item.sellingpoint && item.sellingpoint != ''}}">{{item.sellingpoint}}</view>
                      <view class="time-box" wx:if="{{item.offshelftime && item.offshelftime != '' && item.interval}}">
                        <text>距截团</text>
                        <text :class="{big: (item.lefthour.length > 2 || item.lefthour >= 100)}" class="num ml5">{{item.lefthour}}</text>
                        <text class="txt">:</text>
                        <text class="num">{{item.leftminute}}</text>
                        <text class="txt">:</text>
                        <text class="num">{{item.leftsecond}}</text>
                      </view>
                      <view class="db-flex">
                        <view class="flex_cell flex_left">
                          <view class="clamp1" style="{{themeObject.colorStyle}}">
                            <text>￥</text>
                            <text class="font16" wx:if="{{item.minprice && item.maxprice && item.minprice != '' && item.maxprice != '' && item.minprice != item.maxprice}}">{{item.minprice}}-{{item.maxprice}}</text>
                            <text class="font16" wx:elif="{{item.minprice && item.minprice != ''}}">{{item.minprice}}</text>
                            <text class="ont16" wx:else>{{item.price}}</text>
                            <text class="ml5" wx:if="{{item.oriprice && item.oriprice != '0.00'}}" style="text-decoration:line-through;color:#333;">￥{{item.oriprice}}</text>
                          </view>
                        </view>
                        <view class="btn-list flex_right" wx:if="{{afterSys}}">
                          <block wx:if="{{(OnlyRetailerBuy && userInfo.regwid && userInfo.bindstatus) || !OnlyRetailerBuy}}">
                            <view class="btn-item color-white" style="{{themeObject.bgStyle}}" data-pageindex="{{pageindex}}" data-index="{{index}}" data-data="{{item}}" catchtap="clickBuy">
                              <view class="btn">下单购买</view>
                            </view>
                          </block>
                          <block wx:if="{{OnlyRetailerBuy && (!userInfo.regwid || !userInfo.bindstatus)}}">
                            <view class="btn-item color-white" style="{{themeObject.bgStyle}}" data-pageindex="{{pageindex}}" data-index="{{index}}" data-data="{{item}}" catchtap="retailerBuy">
                              <view class="btn">找店主下单</view>
                            </view>
                          </block>
                        </view>
                      </view>
                    </view>
                  </view>
                </view>
              </repeat>
            </repeat>
          </view>
          <view class="load-end-area loading" wx:if="{{isLoadingProduct}}"></view>
          <view class="load-end-area done" wx:elif="{{isDoneProduct}}"></view>
        </block>
      </view>
    </view>
  </view>
  <productOptions
    :selectedOption.sync="selectedOption"
    :selectedOptionIndex.sync="selectedOptionIndex"
    :clickProduct.sync="clickProduct"
    :themeObject.sync="themeObject"
    :afterSys.sync="afterSys"
    :OnlyRetailerBuy.sync="OnlyRetailerBuy"
    :userInfo.sync="userInfo">
  </productOptions>
</template>

<script>
import wepy from 'wepy'
import Util from '@/libs/util'
import Config from '@/config'
import ProductOptions from '@/components/store/product-options'
export default class extends wepy.component {
  components = {
    productOptions: ProductOptions
  }
  props = {
    sellerUser: {
      type: Object,
      default: {}
    },
    themeObject: {
      type: Object,
      default: {}
    },
    isIOS: {
      type: Boolean,
      default: false
    }
  }
  data = {
    userInfo: {},
    productData: [],
    disProduct: false,
    isLoadingProduct: false,
    isDoneProduct: false,
    showAuth: false,
    selectedIndex: 0,
    buyAnimation: {},
    clickProduct: {},
    clickProductIndex: 0,
    selectedOption: {},
    selectedOptionIndex: 0,
    showProductOpt: false,
    genOrder: false,
    afterSys: false,
    OnlyRetailerBuy: false
  }
  initData () {
    this.pageStart = 0
    this.pageStart1 = 0
    this.pageStart2 = 0
    this.productData = []
    this.disProduct = false
    this.isLoadingProduct = false
    this.isDoneProduct = false
    this.showAuth = false
    this.clickProduct = {}
    this.clickProductIndex = 0
    this.selectedOption = {}
    this.selectedOptionIndex = 0
    this.showProductOpt = false
    this.genOrder = false
  }
  refreshPage () {
    if (this.isLoadingProduct) return false
    this.initData()
    this.$apply()
    this.getProductData()
  }
  async addShop (params) {
    this.genOrder = true
    wepy.showLoading()
    if (this.clickProduct.options && this.clickProduct.options.length && this.selectedOption && this.selectedOption.id) {
      params.poid = this.selectedOption.id
    }
    let postData = {
      ...params,
      wid: this.globalData.Wid,
      external: 1,
      sessionkey: `factory_${this.userInfo.uid}`,
      gxkuid: this.userInfo.gxkuid,
      module: 'factoryproduct',
      fid: Config.Fid
    }
    const res = await wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/order/addShop`,
      data: postData,
      method: 'POST'
    })
    const data = res.data
    wepy.hideLoading()
    if (data.code === 0) {
      let url = `/pages/addOrder?wid=${this.globalData.Wid}&shop_id=${data.data}&fromfid=${Config.Fid}`
      if (this.clickProduct.agentfid) {
        url = `${url}&agentfid=${this.clickProduct.agentfid}`
      }
      wepy.navigateTo({url: url})
    } else {
      wepy.showToast({
        title: data.msg,
        icon: 'none'
      })
    }
    this.genOrder = false
  }
  cutDown (item) {
    item.interval = true
    let h = parseInt(item.lefthour)
    let m = parseInt(item.leftminute)
    let s = parseInt(item.leftsecond)
    if (s > 0) {
      s--
      if (s < 10) {
        item.leftsecond = '0' + s
      } else {
        item.leftsecond = s
      }
    } else if (m > 0) {
      m--
      if (m < 10) {
        item.leftminute = '0' + m
      } else {
        item.leftminute = m
      }
      item.leftsecond = '59'
      s = 59
    } else if (h > 0) {
      h--
      if (h < 10) {
        item.lefthour = '0' + h
      } else {
        item.lefthour = h
      }
      item.leftminute = '59'
      item.leftsecond = '59'
      m = 59
      s = 59
    }
    if (h === 0 && m === 0 && s === 0) {
      item.interval = null
      clearInterval(item.interval)
    }
  }
  handleTimer () {
    clearInterval(this.intervalId)
    this.intervalId = setInterval(() => {
      for (let j in this.productData) {
        let data = this.productData[j]
        for (let i in data) {
          data[i].showOriprice = false
          let curOriprice = data[i].oriprice
          if (curOriprice && curOriprice !== '' && parseFloat(curOriprice.replace(/,/g, '')) > 0) {
            data[i].showOriprice = true
          }
          let offshelftime = data[i].offshelftime
          if (offshelftime && offshelftime !== '') {
            let now = parseInt((new Date().getTime()) / 1000)
            let lefttime = offshelftime - now
            if (lefttime > 0) {
              let hour = Math.floor(lefttime / 60 / 60)
              if (hour < 100) {
                if (hour < 10) {
                  hour = `0${hour}`
                }
                let minute = Math.floor((lefttime - hour * 60 * 60) / 60)
                if (minute < 10) {
                  minute = `0${minute}`
                }
                let second = lefttime - hour * 60 * 60 - minute * 60
                if (second < 10) {
                  second = `0${second}`
                }
                data[i].lefthour = hour
                data[i].leftminute = minute
                data[i].leftsecond = second
                data[i].interval = null
                data[i]._offshelftime = true
                this.cutDown(data[i])
              }
            }
          }
        }
      }
      // this.setData({
      //   productData: this.productData
      // })
      this.$apply()
    }, 1000)
  }
  getProductData () {
    if (this.isLoadingProduct) return false
    this.isLoadingProduct = true
    let params = {
      fid: Config.Fid,
      haveoptions: 0,
      pagestart: this.pageStart,
      limit: this.limit
    }
    if (this.clickClassId) {
      params.classid = this.clickClassId
    }
    wepy.showLoading()
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/factory/factoryproductList`,
      data: params,
      method: 'post'
    }).then(res => {
      wepy.hideLoading()
      const data = res.data
      const retdata = data.data ? data.data : data
      this.productData.push(retdata)
      this.afterProduct = true
      this.handleTimer()
      this.disProduct = true
      if (retdata.length < this.limit && this.productData[0].length) {
        this.isDoneProduct = true
      } else {
        this.isDoneProduct = false
      }
      this.setData({
        [`productData[${this.pageStart}]`]: retdata
      })
      this.isLoadingProduct = false
      this.$apply()
    })
  }
  handlePageData () {
    this.initData()
    this.globalData = this.$root.$parent.globalData
    this.userInfo = this.globalData.userInfo
    this.Wid = this.globalData.Wid
    let SystemParams = this.globalData.SystemParams
    this.SystemParams = SystemParams
    if (SystemParams.OnlyRetailerBuy === '0' || SystemParams.OnlyRetailerBuy === 0) {
      this.OnlyRetailerBuy = false
    } else {
      this.OnlyRetailerBuy = true
    }
    this.afterSys = true
    if (!this.productData.length || !this.productData[0].length) {
      this.getProductData()
    }
    this.$apply()
  }
  onLoad (options) {
    this.options = options
    this.limit = Config.Limit
    this.pageStart = 0
    this.pageStart1 = 0
    this.pageStart2 = 0
  }
  onHide () {
    this.inOnLoad = false
    this.afterProduct = false
    clearInterval(this.intervalId)
  }
  onUnload () {
    this.afterProduct = false
    clearInterval(this.intervalId)
  }
  getUserData () {
    if (this.isLoadingUser) return false
    this.isLoadingUser = true
    let params = {
      fid: Config.Fid,
      pagestart: this.pageStart1,
      limit: this.limit
    }
    if (this.keyword && this.keyword !== '') {
      params.keyword = this.keyword
    }
    wepy.showLoading()
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/order/getTodayUser`,
      data: params,
      method: 'post'
    }).then(res => {
      wepy.hideLoading()
      const data = res.data
      const retdata = data.data ? data.data : data
      if (this.keyword && this.keyword !== '') {
        this.afterSearch = true
      } else {
        this.afterSearch = false
      }
      if (!this.pageStart1) {
        for (let key in this.orderInfo) {
          this.orderInfo[key] = data[key]
        }
      }
      if (!this.selectedUid && (retdata.length || this.userData.length)) {
        this.selectedUid = retdata[0].uid
        retdata[0].checked = true
        this.getOrderData()
      }
      this.disUserList = true
      this.userData = this.userData.concat(retdata)
      if (retdata.length < this.limit && this.userData.length && this.userData.length > this.limit) {
        this.isDoneUser = true
      } else {
        this.isDoneUser = false
      }
      if (this.userData.length > 3) {
        this.scrollClass = 'scroll-view'
        this.allowScroll = true
      } else {
        this.allowScroll = false
      }
      this.isLoadingUser = false
      this.$apply()
      if (this.afterSearch && this.backScroll) {
        wepy.pageScrollTo({scrollTop: this.backScroll})
        this.backScroll = 0
        this.$apply()
      }
    })
  }
  getOrderData () {
    if (this.isLoadingOrder) return false
    this.isLoadingOrder = true
    let params = {
      fid: Config.Fid,
      pagestart: this.pageStart2,
      limit: this.limit,
      factoryuid: this.selectedUid
    }
    if (this.keyword) {
      params.keyword = this.keyword
    }
    wepy.showLoading()
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/order/orderTempList`,
      data: params,
      method: 'post'
    }).then(res => {
      wepy.hideLoading()
      const data = res.data
      const retdata = data.data ? data.data : data
      this.disOrderList = true
      this.orderData = this.orderData.concat(retdata)
      if (retdata.length < this.limit && this.orderData.length && this.orderData.length > this.limit) {
        this.isDoneOrder = true
      } else {
        this.isDoneOrder = false
      }
      this.isLoadingOrder = false
      this.$apply()
    })
  }
  handleOrder (params) {
    let tip = '确定要取消吗？'
    if (params.agree) {
      tip = '确定要收款吗？'
    }
    let idarr = params.ids
    if (!params.ids) {
      idarr = []
      for (let i = 0; i < this.orderData.length; i++) {
        idarr.push(this.orderData[i].id)
      }
    }
    wepy.showModal({
      title: tip
    }).then(res => {
      if (res.confirm) {
        wepy.showLoading()
        wepy.request({
          url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/order/retailerConfirm`,
          data: {agree: params.agree, id: idarr},
          method: 'post'
        }).then(res => {
          wepy.hideLoading()
          const data = res.data
          wepy.showToast({
            title: data.msg,
            icon: 'none',
            duration: Util.delay(data.msg)
          })
          if (data.code === 0) {
            for (let i = 0; i < idarr.length; i++) {
              for (let j = 0; j < this.orderData.length; j++) {
                if (idarr[i] === this.orderData[j].id) {
                  this.orderData.splice(j, 1)
                  break
                }
              }
            }
            for (let j = 0; j < this.userData.length; j++) {
              if (this.selectedUid === this.userData[j].uid) {
                this.userData.splice(j, 1)
                this.selectedUid = null
                break
              }
            }
            if (!this.orderData.length) {
              this.disOrderList = false
            }
            this.selectedUid = null
            this.$apply()
          }
        })
      }
    })
  }
  searchUser () {
    this.disUserList = false
    this.isLoadingUser = false
    this.isDoneUser = false
    this.userData = []
    this.pageStart1 = 0
    this.disOrderList = false
    this.isLoadingOrder = false
    this.isDoneOrder = false
    this.orderData = []
    this.pageStart2 = 0
    this.selectedUid = null
    this.$apply()
    this.getUserData()
  }
  buyOption () {
    if (this.genOrder) return
    if (!this.selectedOption || !this.selectedOption.id) {
      wepy.showToast({
        title: '请选择商品规格',
        icon: 'none'
      })
      return false
    }
    if (this.selectedOption.storage <= 0) {
      wepy.showToast({
        title: '该规格商品库存不足',
        icon: 'none'
      })
      return false
    }
    this.$invoke('productOptions', 'closeOptions')
    if (this.userInfo.subscribe === 0) {
      this.addShopParams = {id: this.clickProduct.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1}
      this.$emit('noAuth')
      return false
    }
    this.addShop({id: this.clickProduct.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1})
  }
  methods = {
    copyWechat () {
      wepy.setClipboardData({
        data: `${this.sellerUser.weixinaccount}`
      })
    },
    clickQrcode () {
      if (this.sellerUser.shoukuanma && this.sellerUser.shoukuanma !== '') {
        wepy.previewImage({
          current: 0,
          urls: [this.sellerUser.shoukuanma]
        })
      }
    },
    toInvite (e) {
      Util.checkTmpMsg({
        systeminfo: this.globalData.systemInfo,
        tmplIds: [this.globalData.Templates.order_delivery, this.globalData.Templates.msg_reply],
        callback: () => {
          wepy.navigateTo({url: '/pages/vip?from=commission'})
        }
      })
    },
    navPage (e) {
      const dataset = e.currentTarget.dataset
      let url = dataset.weburl ? dataset.weburl : dataset.url
      let navurl = url
      if (dataset.weburl) {
        url = encodeURIComponent(url)
        navurl = `/pages/webview?url=${url}`
      }
      wepy.navigateTo({url: navurl})
    },
    toFactoryProduct (item) {
      wepy.setStorageSync('selectedProduct', item)
      wepy.navigateTo({url: `/${Config.Router.product}?id=${item.id}&fid=${Config.Fid}&from=home&select=product&type=fpimport`})
    },
    clickBuy (e) {
      const dataset = e.currentTarget.dataset
      const curData = dataset.data
      const curPageIndex = dataset.pageindex
      const curIndex = dataset.index
      this.clickProduct = curData
      this.clickProductIndex = curIndex
      if (curData.clicked) {
        if (curData.options && curData.options.length) {
          this.selectedOption = curData.options[0]
          this.selectedOptionIndex = 0
          this.$invoke('productOptions', 'showOptions')
        } else {
          if (this.userInfo.subscribe === 0) {
            this.addShopParams = {id: curData.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1}
            this.$emit('noAuth')
            return false
          }
          this.addShop({id: curData.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1})
          this.$apply()
        }
      } else {
        wepy.request({
          url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/factory/getFPOptions`,
          data: {id: curData.moduleid},
          method: 'post'
        }).then(res => {
          const data = res.data
          if (data.code === 0) {
            const retoptions = data.data
            if (retoptions && retoptions.length) {
              this.productData[curPageIndex][curIndex].options = retoptions
              this.selectedOption = retoptions[0]
              this.selectedOptionIndex = 0
              this.clickProduct.options = retoptions
              this.$invoke('productOptions', 'showOptions')
            } else {
              this.productData[curPageIndex][curIndex].options = null
              this.clickProduct.options = null
              if (this.userInfo.subscribe === 0) {
                this.addShopParams = {id: curData.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1}
                this.$emit('noAuth')
                return false
              }
              this.addShop({id: curData.moduleid, wid: this.globalData.Wid, flag: 1, quantity: 1})
            }
          }
          this.productData[curPageIndex][curIndex].clicked = true
          this.$apply()
        })
      }
    },
    userChange (e) {
      const value = parseInt(e.detail.value)
      this.selectedUid = value
      for (let i = 0; i < this.userData.length; i++) {
        let cur = this.userData[i]
        if (cur.uid === value) {
          this.userData[i].checked = true
        } else {
          delete this.userData[i].checked
        }
      }
      this.$apply()
    },
    cancelUser (e) {
      this.handleOrder({
        agree: 0
      })
    },
    confirmUser (e) {
      this.handleOrder({
        agree: 1
      })
    },
    cancelOrder (e) {
      const curData = e.currentTarget.dataset.data
      this.handleOrder({
        agree: 0,
        ids: [curData.id]
      })
    },
    confirmOrder (e) {
      const curData = e.currentTarget.dataset.data
      this.handleOrder({
        agree: 0,
        ids: [curData.id]
      })
    },
    setKeyword (e) {
      this.keyword = e.detail.value
    },
    searchKeyword (e) {
      if (e.detail.value !== '') this.keyword = e.detail.value
      this.backScroll = this.scrollTop
      this.searchUser()
    },
    cancelSearch () {
      this.keyword = ''
      this.backScroll = this.scrollTop
      this.searchUser()
    },
    clickSearch () {
      this.backScroll = this.scrollTop
      this.searchUser()
    },
    clickMobile () {
      wepy.makePhoneCall({
        phoneNumber: this.sellerUser.mobile
      })
    },
    retailerBuy () {
      this.$emit('retailerBuy')
    }
  }
  events = {
    closeOptions () {
      this.hiddePage = false
      this.$apply()
      wepy.pageScrollTo({
        scrollTop: this.backScrollTop
      })
    },
    clickOptions (dataset) {
      this.selectedOption = dataset.data
      this.selectedOptionIndex = dataset.index
      this.$apply()
    }
  }
}
</script>
