<style lang="less">
.card-list-app-tab{
  position:fixed;left:0;right:0;top:0;z-index:10;
}
.cardlist-page{
  padding-top:100rpx;
  .lists{padding:0rpx 40rpx 120rpx;}
  .scroll_item{
    width: 100%;position:relative;background-color: #eb6b5e;color:#fff;
    display: flex;justify-content: center;align-items: center;
    margin-top:40rpx;
    .img{width:100rpx;height:100rpx;}
  }
  .scroll_item.grayitem{background-color: #999;}
  .scroll_item .txt{color:#fff;}
  .scroll_item.grayitem .txt{color:orange;}
  .txt-cell{position:relative;padding-top:30rpx;padding-bottom:30rpx;padding-left:20rpx;box-sizing: border-box;}
  .txt-cell:after{
    content:"";display:block;
    border-right:#f5f9fa 1px dashed;
  	position: absolute;right: 0;top: 0;bottom:0px;
  	-webkit-transform: scaleX(0.5) translateX(0.5px);
  	transform: scaleX(0.5) translateX(0.5px);
  	-webkit-transform-origin: 0% 0%;
  	transform-origin: 0% 0%;
  }
  .scroll_item .ball{
    position: absolute;
    right: -28rpx;
    width: 60rpx;
    height: 60rpx;
    background-color: #f5f9fa;
    border-radius: 50%;
  }
  .scroll_item .ball-up{top: -30rpx;}
  .scroll_item .ball-down{bottom: -30rpx;}
  .scroll_item .pic{width:100rpx;}
  .scroll_item .pic image{width:80rpx;height:80rpx;border-radius:50%;}
  .btn-cell{width:180rpx;padding-top:30rpx;padding-bottom:30rpx;box-sizing: border-box;}
  .btn-cell .al{font-size:130rpx;}
  .btn-cell .icon-chat{margin-top:8rpx;}
  .rbtn{display:inline-block;padding:10rpx;border-radius:10rpx;background-color: #fff;}
  .w120{width:120px;}
}
</style>
<template>
  <view class="app-tab card-list-app-tab">
    <view class="tab-item {{selectedIndex == 0 ? 'active' : ''}}" data-current="0" bindtap="clickTab(0)">
      <text style="{{selectedIndex == 0 ? themeObject.colorStyle : ''}}">优惠券</text>
      <view class="line" style="{{selectedIndex == 0 ? themeObject.bgStyle : ''}}"></view>
    </view>
    <view class="tab-item {{selectedIndex == 1 ? 'active' : ''}}" data-current="1" bindtap="clickTab(1)">
      <text style="{{selectedIndex == 1 ? themeObject.colorStyle : ''}}">礼品</text>
      <view class="line" style="{{selectedIndex == 1 ? themeObject.bgStyle : ''}}"></view>
    </view>
  </view>
  <view class="cardlist-page">
    <block wx:if="{{selectedIndex == 0}}">
      <block wx:if="{{disList1}}">
        <view wx:if="{{!tabData1.length}}" class="flex_empty">暂无数据</view>
        <scroll-view wx:else scroll-y="true" class="scroll-h">
          <view class="lists">
            <repeat for="{{tabData1}}" item="item" index="index">
              <view class="scroll_item" :class="{'grayitem': item.validate <= 0}" @tap="toUse({{item}})">
                <view class="flex_cell txt-cell" style="overflow:visible">
                  <view class="font20 txt">满{{item.ordermoney}}减{{item.money}}</view>
                  <!-- <view class="font12 w_100 flex_left">
                    <block wx:if="{{item.limitpid}}">
                      <text class="w40">仅限【</text>
                      <text class="clamp1 producttitle" :class="{'w120' : item.producttitle.length >= 10 }">{{item.producttitle}}</text>
                      <text class="w40">】使用</text>
                    </block>
                    <text wx:else class="clamp1 producttitle" :class="{'w120' : item.producttitle.length >= 10 }">{{item.producttitle}}</text>
                  </view> -->
                  <view class="font12">到期时间 {{item.deadline_str}}</view>
                  <view class="ball ball-up"></view>
                  <view class="ball ball-down"></view>
                </view>
                <view class="btn-cell flex_center" wx:if="{{item.canuse}}">
                  <view class="rbtn color-theme" style="{{themeObject.colorStyle}}">去使用</view>
                </view>
                <view class="btn-cell flex_center" wx:else>
                  <view class="w_100 font12">
                    <view class="align_center">{{item.startdate_str}}</view>
                    <view class="align_center">后可用</view>
                  </view>
                </view>
              </view>
            </repeat>
          </view>
        </scroll-view>
        <view class="load-end-area loading" wx:if="{{isLoading1}}"></view>
        <view class="load-end-area done" wx:elif="{{isDone1}}"></view>
      </block>
    </block>
    <block wx:if="{{selectedIndex == 1}}">
      <block wx:if="{{disList2}}">
        <view wx:if="{{!tabData2.length}}" class="flex_empty">暂无数据</view>
        <scroll-view wx:else scroll-y="true" class="scroll-h">
          <view class="lists">
            <repeat for="{{tabData2}}" item="item" index="index">
              <view class="scroll_item" @tap="toUseProduct({{item}}, {{index}})">
                <view class="flex_cell txt-cell flex_left" style="overflow:visible">
                  <image class="img" mode="aspectFill" wx:if="{{item.photo && item.photo != ''}}" src="{{item.photo}}" />
                  <view class="ml10 flex_cell">
                    <view class="w_100 clamp1">{{item.title}}</view>
                  </view>
                  <view class="ball ball-up"></view>
                  <view class="ball ball-down"></view>
                </view>
                <view class="btn-cell flex_center">
                  <view class="rbtn color-theme" style="{{themeObject.colorStyle}}">去使用</view>
                </view>
              </view>
            </repeat>
          </view>
        </scroll-view>
        <view class="load-end-area loading" wx:if="{{isLoading2}}"></view>
        <view class="load-end-area done" wx:elif="{{isDone2}}"></view>
      </block>
    </block>
  </view>
  <view class="auto-modal flex_center" wx:if="{{showTable}}">
    <view class="modal-inner">
      <view class="box-outer">
        <view class="pt10 pb10 b_bottom_after bold font18 align_center">请输入桌号</view>
        <view class="padding10">
          <input value="{{tableid ? tableid : ''}}" type="number" class="input" placeholder="桌号" bindinput="inputEvent" />
        </view>
        <view class="flex_center pt20 pb20">
          <view class="flex_center"  style="width:80%;height:30px;border-radius:60px;{{themeObject.bgStyle}}" bindtap="submitTable">加入本桌菜单</view>
        </view>
      </view>
      <view class="close-area flex_center">
        <view class="al al-close1" bindtap="closeTable"></view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import Util from '@/libs/util'
import Time from '@/libs/time'
import Config from '@/config'
export default class CardList extends wepy.page {
  config = {
    enablePullDownRefresh: true,
    backgroundTextStyle: 'dark'
  }
  data = {
    options: {},
    globalData: {},
    userInfo: null,
    lastIndex: 0,
    selectedIndex: 0,
    disList1: false,
    disList2: false,
    tabData1: [],
    tabData2: [],
    themeObject: {},
    showTable: 0,
    tableid: 0,
    isLoading1: false,
    isDone1: false,
    isLoading2: false,
    isDone2: false
  }
  dateFormat (value) {
    return new Time(value * 1000).dateFormat('yyyy-MM-dd')
  }
  onPullDownRefresh () {
    wepy.showNavigationBarLoading()
    setTimeout(function () {
      wepy.hideNavigationBarLoading()
      wepy.stopPullDownRefresh()
    }, 500)
    this.refreshPage()
  }
  onReachBottom () {
    console.log('进入到底部', this.selectedIndex)
    switch (this.selectedIndex) {
      case 0:
        console.log(this.isLoading1)
        if (this.isLoading1) return false
        console.log(this.tabData1.length)
        console.log(this.pageStart1 * this.limit)
        console.log(this.tabData1.length === this.pageStart1 * this.limit)
        if (this.tabData1.length === this.pageStart1 * this.limit) {
          this.isLoading1 = true
          this.pageStart1++
          this.getData1()
        }
        break
      case 1:
        if (this.isLoading2) return false
        if (this.tabData2.length === this.pageStart2 * this.limit) {
          this.isLoading2 = true
          this.pageStart2++
          this.getData2()
        }
        break
    }
  }
  getData1 = function () {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/card/cardList`,
      data: {used: 0, page: this.pageStart1, limit: this.limit},
      method: 'post'
    }).then(res => {
      this.isLoading1 = false
      const data = res.data
      let retdata = data.data ? data.data : data
      for (let i = 0; i < retdata.length; i++) {
        retdata[i].dateline_str = new Time(retdata[i].dateline * 1000).dateFormat('yyyy-MM-dd hh:mm')
        retdata[i].startdate_str = new Time(retdata[i].startdate * 1000).dateFormat('yyyy-MM-dd')
        let now = new Date().getTime()
        if (now >= retdata[i].startdate * 1000) retdata[i].canuse = true
      }
      this.tabData1 = this.tabData1.concat(retdata)
      this.disList1 = true
      if (retdata.length < this.limit && this.tabData1.length) {
        this.isDone1 = true
      }
      wepy.stopPullDownRefresh()
      this.$apply()
    })
  }
  getData2 = function () {
    wepy.request({
      url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/card/giveProductList`,
      data: {page: this.pageStart2, limit: this.limit},
      method: 'post'
    }).then(res => {
      const data = res.data
      let retdata = data.data ? data.data : data
      for (let i = 0; i < retdata.length; i++) {
        retdata[i].usedateline_str = new Time(retdata[i].usedateline * 1000).dateFormat('yyyy-MM-dd hh:mm')
      }
      this.tabData2 = this.tabData2.concat(retdata)
      this.disList2 = true
      if (retdata.length < this.limit && this.tabData2.length) {
        this.isDone2 = true
      }
      this.$apply()
    })
  }
  refreshPage () {
    this.selectedIndex = 0
    this.disList1 = false
    this.disList2 = false
    this.tabData1 = []
    this.tabData2 = []
    this.pageStart1 = 1
    this.pageStart2 = 1
    this.$apply()
    this.handlePageData()
  }
  switchData () {
    switch (this.selectedIndex) {
      case 0:
        if (!this.tabData1.length) {
          this.pageStart1 = 1
          this.getData1()
        }
        break
      case 1:
        if (!this.tabData2.length) {
          this.pageStart2 = 1
          this.getData2()
        }
        break
    }
  }
  handlePageData () {
    this.globalData = this.$parent.globalData
    Util.appInit(this.globalData, this)
    this.options = {...this.globalData.options.query, ...this.options}
    if (this.options.tableid) this.tableid = this.options.tableid
    this.userInfo = this.globalData.userInfo
    if (this.options.flag) this.selectedIndex = parseInt(this.options.flag)
    console.log('进入到优惠券页面的参数,flag=', this.selectedIndex)
    this.switchData()
    this.$apply()
  }
  onLoad (options) {
    this.options = options
    this.pageStart1 = 1
    this.pageStart2 = 1
    this.limit = Config.Limit
    wepy.hideShareMenu()
    this.$apply()
  }
  onShow () {
    this.pageStart1 = 1
    this.pageStart2 = 1
    if (this.$parent.globalData.flag.bokaAuth) {
      this.handlePageData()
    } else {
      this.$parent.showCallback = () => {
        this.handlePageData()
      }
    }
  }
  methods = {
    toUse (item) {
      wepy.navigateTo({url: `/packageC/pages/card?id=${item.id}&frompage=user`})
    },
    toHome (e) {
      wepy.reLaunch({url: Config.HomePage})
    },
    formSubmit (e) {
      wepy.navigateTo({url: e.currentTarget.dataset.url})
    },
    clickTab (index) {
      this.selectedIndex = parseInt(index)
      this.switchData()
    },
    switchTab (e) {
      this.selectedIndex = e.detail.current
      this.lastIndex = this.selectedIndex
      this.switchData()
    },
    toUseProduct (item, index) {
      this.tableid = ''
      this.clickData = item
      this.showTable = true
      this.$apply()
    },
    closeTable () {
      this.showTable = false
      this.$apply()
    },
    inputEvent (e) {
      this.tableid = e.detail.value
    },
    submitTable () {
      if (this.submitIng) return false
      if (!this.tableid || this.tableid === '') {
        wepy.showToast({
          title: '请输入桌号',
          icon: 'none'
        })
        return false
      }
      this.submitIng = true
      wepy.showLoading()
      wepy.request({
        url: `${Config.BokaApi}/${Config[Config.ApiVersion]}/card/useGiveProduct`,
        data: {id: this.clickData.id, tableid: this.tableid},
        method: 'post'
      }).then(res => {
        this.submitIng = false
        let data = res.data
        wepy.hideLoading()
        wepy.showToast({
          title: data.msg,
          icon: 'none',
          duration: Util.delay(data.msg)
        })
      })
    }
  }
}
</script>
